class AlbumsHandler {
	constructor(service, validator) {
		this._service = service;
		this._validator = validator;

		this.postAlbumHandler = this.postAlbumHandler.bind(this);
		this.getAlbumsHandler = this.getAlbumsHandler.bind(this);
		this.getAlbumByIdHandler = this.getAlbumByIdHandler.bind(this);
		this.putAlbumByIdHandler = this.putAlbumByIdHandler.bind(this);
		this.deleteAlbumByIdHandler = this.deleteAlbumByIdHandler.bind(this);
	}
	async postAlbumHandler(request, h) {
		try {
			this._validator.validateAlbumPayload(request.payload);

			const { name, year } = request.payload;

			const albumId = await this._service.addAlbum({ name, year });

			const response = h.response({
				status: 'success',
				message: 'Catatan berhasil ditambahkan',
				data: {
					albumId,
				},
			});
			response.code(201);
			return response;
		} catch (error) {
			return error;
		}
	}
	async getAlbumsHandler() {
		const albums = await this._service.getAlbums();
		return {
			status: 'success',
			data: {
				albums: albums,
			},
		};
	}
	async getAlbumByIdHandler(request) {
		try {
			const { id } = request.params;
			const data = await this._service.getAlbumById(id);
			return {
				status: 'success',
				data: {
					album: data,
				},
			};
		} catch (error) {
			return error;
		}
	}
	async putAlbumByIdHandler(request) {
		try {
			this._validator.validateAlbumPayload(request.payload);
			const { id } = request.params;

			await this._service.editAlbumById(id, request.payload);

			return {
				status: 'success',
				message: 'Catatan berhasil diperbarui',
			};
		} catch (error) {
			return error;		
		}
	}
	async deleteAlbumByIdHandler(request) {
		try {
			const { id } = request.params;
			await this._service.deleteAlbumById(id);
			return {
				status: 'success',
				message: 'Catatan berhasil dihapus',
			};
		} catch (error) {
			return error;
		}
	}
}

export default AlbumsHandler;
